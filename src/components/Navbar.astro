---
// Sticky navbar with scroll background change
import { getImage } from 'astro:assets';
import logo from '../../public/assets/logo.png';
---

<nav id="navbar" class="fixed top-0 left-0 w-full z-30 transition-all backdrop-blur border-b border-transparent">
  <div class="max-w-4xl mx-auto flex items-center justify-between px-4 py-3">
    <a href={import.meta.env.BASE_URL} class="flex items-center gap-2 font-bold text-accent text-lg select-none">
      <img src={import.meta.env.BASE_URL + 'assets/logo.png'} alt="Fun Phone" class="w-8 h-8 min-w-8 min-h-8 max-w-8 max-h-8" style="image-rendering:auto;" draggable="false" />
      <span class="tracking-tight">Fun Phone</span>
    </a>

    <!-- Desktop navigation -->
    <div class="hidden md:flex items-center gap-4">
      <a href={import.meta.env.BASE_URL + 'features/'} class="hover:underline font-semibold" id="features-link">Funciones</a>
      <a href={import.meta.env.BASE_URL + 'faq/'} class="hover:underline font-semibold">FAQ</a>
      <a href={import.meta.env.BASE_URL + 'privacy/'} class="hover:underline font-semibold" id="privacy-link">Privacidad</a>
      <a href="https://play.google.com/store/apps/details?id=com.bookverse.contacts" target="_blank" rel="noopener" class="bg-accent text-white px-3 py-1 rounded-lg font-semibold shadow hover:bg-blue-700 transition" id="download-link">Descargar</a>
      <!-- Switch idioma -->
      <button id="lang-toggle" class="ml-2 px-2 py-1 rounded focus:outline-accent border border-accent text-accent bg-white dark:bg-neutral-900 hover:bg-accent hover:text-white transition">
        <span id="lang-text">EN</span>
      </button>
      <!-- Switch modo oscuro -->
      <button id="dark-toggle" class="ml-2 px-2 py-1 rounded focus:outline-accent border border-accent text-accent bg-white dark:bg-neutral-900 hover:bg-accent hover:text-white transition">
        <svg id="sun-icon" xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 hidden" fill="none" viewBox="0 0 24 24" stroke="currentColor"><circle cx="12" cy="12" r="5" stroke-width="2"/><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 1v2m0 18v2m11-11h-2M3 12H1m16.95 6.95l-1.414-1.414M6.464 6.464L5.05 5.05m12.02 0l-1.414 1.414M6.464 17.536l-1.414 1.414"/></svg>
        <svg id="moon-icon" xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12.79A9 9 0 1111.21 3a7 7 0 109.79 9.79z"/></svg>
      </button>
    </div>

    <!-- Mobile navigation -->
    <div class="flex md:hidden items-center gap-2">
      <a href="https://play.google.com/store/apps/details?id=com.bookverse.contacts" target="_blank" rel="noopener" class="bg-accent text-white px-3 py-1 rounded-lg font-semibold shadow hover:bg-blue-700 transition" id="download-link-mobile">Descargar</a>
      <button id="menu-toggle" aria-label="Abrir menú" class="ml-2 p-2 rounded focus:outline-accent border border-accent text-accent bg-white dark:bg-neutral-900 hover:bg-accent hover:text-white transition">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/></svg>
      </button>
    </div>
  </div>
</nav>

<!-- Mobile menu overlay -->
<div id="mobile-menu" class="fixed inset-0 z-50 md:hidden hidden">
  <div class="fixed inset-0 bg-black bg-opacity-50" id="menu-overlay"></div>
  <div id="menu-panel" class="fixed top-0 right-0 h-full w-64 bg-white dark:bg-neutral-900 shadow-xl transform translate-x-full transition-transform duration-300 ease-in-out">
    <div class="flex flex-col h-full">
      <div class="flex items-center justify-between p-4 border-b border-gray-100 dark:border-neutral-800">
        <span class="font-bold text-accent text-lg">Menú</span>
        <button id="menu-close" class="p-2 rounded border border-accent text-accent bg-white dark:bg-neutral-900 hover:bg-accent hover:text-white transition">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/></svg>
        </button>
      </div>
      
      <nav class="flex-1 p-4 space-y-4">
        <a href={import.meta.env.BASE_URL + 'features/'} class="block px-4 py-2 rounded font-semibold text-accent hover:bg-accent hover:text-white transition menu-link" id="mobile-features-link">Funciones</a>
        <a href={import.meta.env.BASE_URL + 'faq/'} class="block px-4 py-2 rounded font-semibold text-accent hover:bg-accent hover:text-white transition menu-link">FAQ</a>
        <a href={import.meta.env.BASE_URL + 'privacy/'} class="block px-4 py-2 rounded font-semibold text-accent hover:bg-accent hover:text-white transition menu-link" id="mobile-privacy-link">Privacidad</a>
        
        <div class="border-t border-gray-100 dark:border-neutral-800 my-4"></div>
        
        <button id="mobile-lang-toggle" class="block w-full text-left px-4 py-2 rounded font-semibold text-accent hover:bg-accent hover:text-white transition">
          <span id="mobile-lang-text">Idioma: Cambiar a EN</span>
        </button>
        
        <button id="mobile-dark-toggle" class="block w-full text-left px-4 py-2 rounded font-semibold text-accent hover:bg-accent hover:text-white transition">
          <span id="mobile-dark-text">Modo claro</span>
        </button>
      </nav>
    </div>
  </div>
</div>

<script>
// Configuración inicial
let currentLang = localStorage.getItem('lang') || 'es';
let isDark = localStorage.getItem('darkMode') === null ? true : localStorage.getItem('darkMode') === 'true';
let menuOpen = false;

// Referencias DOM
const navbar = document.getElementById('navbar');
const mobileMenu = document.getElementById('mobile-menu');
const menuPanel = document.getElementById('menu-panel');
const menuToggle = document.getElementById('menu-toggle');
const menuClose = document.getElementById('menu-close');
const menuOverlay = document.getElementById('menu-overlay');
const menuLinks = document.querySelectorAll('.menu-link');

// Elementos de idioma
const featuresLink = document.getElementById('features-link');
const privacyLink = document.getElementById('privacy-link');
const downloadLink = document.getElementById('download-link');
const downloadLinkMobile = document.getElementById('download-link-mobile');
const langToggle = document.getElementById('lang-toggle');
const langText = document.getElementById('lang-text');
const mobileFeaturesLink = document.getElementById('mobile-features-link');
const mobilePrivacyLink = document.getElementById('mobile-privacy-link');
const mobileLangToggle = document.getElementById('mobile-lang-toggle');
const mobileLangText = document.getElementById('mobile-lang-text');

// Elementos de tema oscuro
const darkToggle = document.getElementById('dark-toggle');
const mobileDarkToggle = document.getElementById('mobile-dark-toggle');
const sunIcon = document.getElementById('sun-icon');
const moonIcon = document.getElementById('moon-icon');
const mobileDarkText = document.getElementById('mobile-dark-text');

// Inicialización
function init() {
  updateLanguage();
  updateTheme();
  setupScrollListener();
  setupMenuListeners();
}

// Actualizar idioma
function updateLanguage() {
  if (currentLang === 'es') {
    featuresLink.textContent = 'Funciones';
    privacyLink.textContent = 'Privacidad';
    downloadLink.textContent = 'Descargar';
    downloadLinkMobile.textContent = 'Descargar';
    langText.textContent = 'EN';
    mobileFeaturesLink.textContent = 'Funciones';
    mobilePrivacyLink.textContent = 'Privacidad';
    mobileLangText.textContent = 'Idioma: Cambiar a EN';
    mobileDarkText.textContent = isDark ? 'Modo claro' : 'Modo oscuro';
  } else {
    featuresLink.textContent = 'Features';
    privacyLink.textContent = 'Privacy';
    downloadLink.textContent = 'Download';
    downloadLinkMobile.textContent = 'Download';
    langText.textContent = 'ES';
    mobileFeaturesLink.textContent = 'Features';
    mobilePrivacyLink.textContent = 'Privacy';
    mobileLangText.textContent = 'Language: Switch to ES';
    mobileDarkText.textContent = isDark ? 'Light mode' : 'Dark mode';
  }
  
  // Disparar evento personalizado para otros componentes
  window.dispatchEvent(new CustomEvent('lang', { detail: currentLang }));
}

// Actualizar tema
function updateTheme() {
  document.documentElement.classList.toggle('dark', isDark);
  
  if (isDark) {
    sunIcon.classList.add('hidden');
    moonIcon.classList.remove('hidden');
  } else {
    sunIcon.classList.remove('hidden');
    moonIcon.classList.add('hidden');
  }
  
  updateLanguage(); // Actualizar textos del tema
}

// Configurar listener de scroll
function setupScrollListener() {
  window.addEventListener('scroll', () => {
    const scrolled = window.scrollY > 20;
    if (scrolled) {
      navbar.classList.add('bg-white/90', 'dark:bg-neutral-900/90', 'shadow');
      navbar.classList.remove('bg-transparent');
    } else {
      navbar.classList.remove('bg-white/90', 'dark:bg-neutral-900/90', 'shadow');
      navbar.classList.add('bg-transparent');
    }
  });
}

// Configurar listeners del menú
function setupMenuListeners() {
  // Abrir menú
  menuToggle.addEventListener('click', openMenu);
  
  // Cerrar menú
  menuClose.addEventListener('click', closeMenu);
  menuOverlay.addEventListener('click', closeMenu);
  
  // Cerrar menú al hacer clic en links
  menuLinks.forEach(link => {
    link.addEventListener('click', closeMenu);
  });
  
  // Toggle de idioma
  langToggle.addEventListener('click', toggleLanguage);
  mobileLangToggle.addEventListener('click', toggleLanguage);
  
  // Toggle de tema oscuro
  darkToggle.addEventListener('click', toggleTheme);
  mobileDarkToggle.addEventListener('click', toggleTheme);
}

// Abrir menú
function openMenu() {
  menuOpen = true;
  mobileMenu.classList.remove('hidden');
  setTimeout(() => {
    menuPanel.classList.remove('translate-x-full');
  }, 10);
}

// Cerrar menú
function closeMenu() {
  menuOpen = false;
  menuPanel.classList.add('translate-x-full');
  setTimeout(() => {
    mobileMenu.classList.add('hidden');
  }, 300);
}

// Toggle de idioma
function toggleLanguage() {
  currentLang = currentLang === 'es' ? 'en' : 'es';
  localStorage.setItem('lang', currentLang);
  updateLanguage();
}

// Toggle de tema
function toggleTheme() {
  isDark = !isDark;
  localStorage.setItem('darkMode', isDark);
  updateTheme();
}

// Inicializar cuando el DOM esté listo
if (document.readyState === 'loading') {
  document.addEventListener('DOMContentLoaded', init);
} else {
  init();
}
</script>
